# versiion
ARG cuda_version=10.2
ARG cudnn_version=7
ARG ubuntu_version=16.04

# FROM nvidia/cuda:${cuda_version}-cudnn${cudnn_version}-devel-ubuntu${ubuntu_version}
FROM nvidia/cuda:${cuda_version}-cudnn${cudnn_version}-devel-ubuntu16.04

# base image
MAINTAINER yubaoliu89@gmail.com

ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# Setup timezone
RUN echo 'Etc/UTC' > /etc/timezone && \
    rm -f /etc/localtime && \
    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    apt-get update && apt-get install -y tzdata

# Install tools for development
RUN apt-get update && \
    apt-get install -y software-properties-common \
    sudo \
    byobu \
    gdb \
    htop \
    wget \
    git \
    curl \
    zip \
    unzip \
    g++ \
    libevent-dev \
    bison \
    byacc \
    autotools-dev \
    automake \
    libgdbm-dev \
    libssl-dev \
    libreadline-dev \
    zlib1g-dev \
    autoconf \
    bison \
    libyaml-dev \
    dirmngr \
    gnupg \
    git \
    build-essential \
    libffi-dev \
    libncurses5-dev \
    libssl-dev \
    libreadline-dev \
    zlib1g-dev && \
    apt install -f

# Install rbenv
RUN apt autoremove -y ruby*  \
    && apt autoremove \
    && apt update  \
    && git clone https://github.com/rbenv/rbenv.git ~/.rbenv \
    && echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc \
    && echo 'eval "$(rbenv init -)"' >> ~/.bashrc
ENV PATH /root/.rbenv/shims:/root/.rbenv/bin:$PATH
# Install ruby-build & ruby
RUN git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build  \
    && ~/.rbenv/bin/rbenv install 2.6.0  \
    && ~/.rbenv/bin/rbenv global 2.6.0
# Initiarize ruby encording
ENV RUBYOPT -EUTF-8
# Install bundler
RUN ~/.rbenv/bin/rbenv exec gem install bundler

# Add ROS repository
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'  \
    && apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654  \
    && apt-get update  \
    && apt-get install -f --fix-missing \
    && apt-get install -y ros-kinetic-desktop-full

# Install ROS bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    python-rosdep \
    python-rosinstall \
    python-vcstools \
    python-rosinstall-generator \
    python-wstool

# Set up rosdep
RUN rosdep init
RUN rosdep update

### Create catkin workspace ###
RUN mkdir -p /root/catkin_ws/src
WORKDIR /root/catkin_ws
RUN bash -c "source /opt/ros/kinetic/setup.bash && \
             catkin_make -DCMAKE_BUILD_TYPE=Release"

# Load ROS environment at docker exec bash
RUN echo "source /opt/ros/kinetic/setup.bash" >> /root/.bashrc
RUN echo "source /root/catkin_ws/devel/setup.bash" >> /root/.bashrc
                  
# Python
RUN apt-get update  \
    && apt-get install -y python-dev \
    python-pip \
    python3-dev \
    python3-pip 
#update pip 
RUN curl -kL https://bootstrap.pypa.io/get-pip.py | python3 \
    && curl -kL https://bootstrap.pypa.io/get-pip.py | python

## Finally install some helpful tools
#RUN apt-get update && \
#    apt-get install -y vim \
#    vim-gtk \ 
#    xclip \
#    openssh-server \
#    tmux \
#    graphviz \
#    trash-cli \
#    zsh \
#    iputils-ping \
#    net-tools \
#    tree \
#    xterm \
#    lxterminal \
#    libglew-dev \
#    libxkbcommon-dev \
#    mesa-utils \
#    pciutils \
#    pacman \
#    && gem install --user-install tmuxinator bundler  \
#    && apt install -f
#
## Install pytho  dependencies
#COPY ./requirements-python2.txt /root/
#COPY ./requirements-python3.txt /root/
#
## RUN  pip3 install --force-reinstall -r /root/requirements-python3.txt \
#    # && pip2 install --force-reinstall -r /root/requirements-python2.txt
# 
#RUN  pip3 install -r /root/requirements-python3.txt \
#    && pip2 install -r /root/requirements-python2.txt
#
## Self defined script
#COPY ./userconfig.sh /root/
#RUN chmod 777 /root/userconfig.sh  && \
#    /bin/bash -c "/root/userconfig.sh"
#
## Config editor
#RUN rm ~/dotfiles -rf && \ 
#    git clone https://github.com/yubaoliu/dotfiles.git  ~/dotfiles && \
#    cd ~/ && \
#    rm -rf ~/.vimrc && \
#    rm -rf ~/.tmux.conf && \
#    ln -s ~/dotfiles/.vimrc && \
#    ln -s ~/dotfiles/.tmux.conf
#
## VIM plugin
#RUN curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
#    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
# RUN rm -rf /var/cache/lightdm

# Load ROS environment at each run
COPY ./entrypoint-kinetic.sh /
RUN /bin/bash -c "chmod 777 /entrypoint-kinetic.sh"
ENTRYPOINT ["/entrypoint-kinetic.sh"]

CMD ["bash"]

WORKDIR /root

# From https://github.com/NVIDIA/nvidia-container-runtime/blob/master/README.md
# compute: required for CUDA and OpenCL applications.
# display: required for leveraging X11 display.
# graphics: required for running OpenGL and Vulkan applications.
# utility: required for using nvidia-smi and NVML.
# video: required for using the Video Codec SDK. Required by ZED SDK.
ENV NVIDIA_DRIVER_CAPABILITIES compute,display,graphics,utility,video
