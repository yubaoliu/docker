FROM yubaoliu/root:ros-cuda10.2-cudnn7-ubuntu18

RUN apt update && \
    apt install -f && \
    apt install -y  libglew-dev \
    libxkbcommon-dev

# coco API
RUN pip install git+https://github.com/philferriere/cocoapi.git#subdirectory=PythonAPI

# Install Pangolin 
RUN git clone https://github.com/stevenlovegrove/Pangolin.git \
    && cd Pangolin \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j 3 \
    && make install

#RUN git clone https://github.com/yubaoliu/ORB_SLAM2.git  \
#    && cd ORB_SLAM2  \
#    && git checkout dev  \
#    && ./build.sh

# Install mask rcnn dependencies
COPY requirements.txt /root/requirements.txt
RUN  pip3 install --force-reinstall -r /root/requirements.txt
   
# Install mask rcnn
RUN git clone https://github.com/yubaoliu/Mask_RCNN.git \
    && cd Mask_RCNN  \
    && git checkout dev \
    && python3 setup.py install


# copy project file, because private repo cannot use here directly
#RUN mkdir   /root/rts-vslam
#COPY .  /root/rts-vslam/

COPY ./entrypoint.sh /
RUN chmod 777 /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]

CMD ["bash"]

# # Install dependencies
# # Newer CUDA was installed in base image, so rosdep keys of CUDA are skipped
# RUN /bin/bash -c "source /opt/ros/melodic/setup.bash && \
#                   rosdep install --from-paths src -r -y --skip-keys=\"nvidia-cuda-dev nvidia-cuda\""
#                   
# # Build
# RUN /bin/bash -c "source /opt/ros/melodic/setup.bash && \
#                   catkin_make -DCMAKE_BUILD_TYPE=Release"
# 
# # Load ROS environment at each run


