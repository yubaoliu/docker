# versiion
ARG cuda_version=9.0
ARG cudnn_version=7
ARG ubuntu_version=16.04

# base image
FROM nvidia/cuda:${cuda_version}-cudnn${cudnn_version}-devel-ubuntu${ubuntu_version}

# maintainer
MAINTAINER MAINTAINER_NAME yubaoliu89@gmail.com

# Install dependencies
RUN apt-get update \
    && apt-get install -y --fix-missing \
    pkg-config \
    lxterminal \
    gdb \
        wget git htop libhdf5-dev g++ graphviz openmpi-bin \
        software-properties-common \
        lsb-release \
        build-essential  \
        net-tools \
        iputils-ping \
        python-pip \
        python-dev \
        python-tk \
        vim \
        openssh-server \
        language-pack-ja \
        language-pack-en \
        curl zip unzip \
        libboost-all-dev \
        libgflags-dev \
        libgoogle-glog-dev \
        libhdf5-serial-dev \
        libleveldb-dev \
        liblmdb-dev \
        bash-completion \
    sudo \
    tmux \
    libglew-dev \
    libeigen3-dev \
    cmake-qt-gui \
    qtbase5-dev \
    qt5-default \
    freeglut3-dev  \
    autoconf \
    && apt autoremove -y \
    && apt update 
 
# update pip
RUN curl -kL https://bootstrap.pypa.io/get-pip.py | python 
   
# Setup timezone
RUN echo 'Etc/UTC' > /etc/timezone && \
    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    apt-get update && apt-get install -y tzdata

# Install packages to add ROS repository
RUN apt-get install -y dirmngr gnupg2

# Add ROS repository
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu bionic main" > /etc/apt/sources.list.d/ros-latest.list'
# Keys for ROS repository
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
# Install ROS bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    python-rosdep \
    python-rosinstall \
    python-vcstools
# Set up rosdep
RUN rosdep init
RUN rosdep update
# Install ROS-Base packages
RUN apt-get update && apt-get install -y ros-melodic-desktop-full
WORKDIR /root

# Pangolin
RUN git clone https://github.com/stevenlovegrove/Pangolin.git \
    && cd Pangolin \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make -j \
    && make install \
    && rm -rf /root/Pangolin 

### Upgrade Gazebo ###

# Upgrade Gazebo to resolve access error to api.ignition.org
# See http://answers.gazebosim.org/question/22263/error-in-rest-request-for-accessing-apiignitionorg/
RUN apt-get update && \
    apt-get install -y wget
RUN echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list && \
    wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -
RUN apt-get update && \
    apt-get install -y gazebo9 \
                       libignition-cmake-dev \
                       libignition-common \
                       libignition-common-dev \
                       libignition-fuel-tools1-1 \
                       libignition-fuel-tools1-dev \
                       libsdformat6 \
                       libsdformat6-dev \
                       sdformat-sdf

### Create catkin workspace ###

RUN mkdir -p /root/catkin_ws/src
WORKDIR /root/catkin_ws
RUN bash -c "source /opt/ros/melodic/setup.bash && \
             catkin_make -DCMAKE_BUILD_TYPE=Release"

# Load ROS environment at docker exec bash
RUN echo "source /opt/ros/melodic/setup.bash" >> /root/.bashrc
RUN echo "source /root/catkin_ws/devel/setup.bash" >> /root/.bashrc

ENV NVIDIA_DRIVER_CAPABILITIES compute,display,graphics,utility,video

# Load ROS environment at each run
COPY ./ros_entrypoint.sh /
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]

